<?php

/**
 * @file
 * Contains class CurrencyCRUDWebTestCase.
 */

/**
 * Tests CRUD.
 */
class CurrencyCRUDWebTestCase extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => 'Currency CRUD',
      'group' => 'Currency',
    );
  }

  function setUp(array $modules = array()) {
    parent::setUp($modules + array('currency'));
  }

  /**
   * Checks if a currency exists in the database.
   *
   * @param Currency $currency
   *
   * @return boolean
   */
  function currencyExists(Currency $currency) {
    $schema = drupal_get_schema('currency');
    $query = db_select('currency');
    foreach (array_keys($schema['fields']) as $property) {
      $query->condition($property, $currency->$property);
    }

    return $query->countQuery()
      ->execute();
  }

  /**
   * Test CRUD functionality.
   */
  function testCRUD() {
    // Test creating a new currency.
    $this->assertEqual(ctools_export_crud_new('currency'), new Currency(), 'Chaos tools correctly creates a new currency.');

    // Test inserting a currency.
    $currency = new Currency(array(
      'ISO4217Code' => 'XXX',
      'minorUnit' => 5,
      'title' => $this->randomName(),
    ));
    ctools_export_crud_save('currency', $currency);
    $this->assertTrue($this->currencyExists($currency), 'Chaos tools correctly inserts a currency.');

    // Test loading a currency.
    $currency_loaded = ctools_export_crud_load('currency', $currency->ISO4217Code);
    // The "export_type" and "type" properties are supposed to change.
    unset($currency->export_type);
    unset($currency->type);
    unset($currency_loaded->export_type);
    unset($currency_loaded->type);
    $this->assertEqual($currency, $currency_loaded, 'Chaos tools correctly loads a currency.');

    // Test updating a currency.
    $currency->ISO4217Code = 'EUR';
    $currency->export_module = 'foo';
    $currency->export_type = EXPORT_IN_CODE;
    $currency->sign = 'bar';
    $currency->title = 'baz';
    ctools_export_crud_save('currency', $currency);
    $this->assertTrue($this->currencyExists($currency), 'Chaos tools correctly updates a currency.');

    // Test deleting a currency.
    ctools_export_crud_delete('currency', $currency->ISO4217Code);
    $count = db_query("SELECT COUNT(1) FROM {currency} WHERE ISO4217Code = :ISO4217Code", array(
      ':ISO4217Code' => $currency->ISO4217Code,
    ))->fetchField();
    $this->assertFalse($count, 'Chaos tools correctly deletes a currency.');
  }
}