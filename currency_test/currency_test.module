<?php

/**
 * @file
 * Hook implementations and shared functions.
 *
 * @see CurrenctCurrencyAmountFormElementWebTestCase
 */

/**
 * Implements hook_menu().
 */
function currency_test_menu() {
  // The URL path arguments are optional numeric values specifying a minimum
  // and maximum amount.
  $items['currency_test-form-element-currency-amount/%/%'] = array(
    'title' => 'Test the currency_amount form element',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('currency_test_form_currency_amount', 1, 2),
    'access callback' => TRUE,
  );
  $items['currency_test-form-element-currency-locale'] = array(
    'title' => 'Test the currency_locale form element',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('currency_test_form_currency_locale'),
    'access callback' => TRUE,
  );
  $items['currency_test-form-element-currency-sign'] = array(
    'title' => 'Test the currency_sign form element',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('currency_test_form_currency_sign', 1, 2),
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_views_data().
 */
function currency_test_views_data() {
  // Declaration of the base table.
  $data['currency_test']['table'] = array(
    'base' => array(
      'field' => 'id',
      'title' => t('Currency test'),
    ),
    'group' => t('Currency test'),
  );

  // Declaration of fields.
  $data['currency_test']['currency_code'] = array(
    'field' => array(
      'id' => 'standard',
    ),
    'help' => t('Currency code'),
    'title' => t('Currency code'),
  );
  $data['currency_test']['currency'] = array(
    'filter' => array(
      'id' => 'currency',
      'real field' => 'currency_code',
    ),
    'help' => t('Currency'),
    'title' => t('Currency'),
  );
  $data['currency_test']['amount_currency_code_definition'] = array(
    'field' => array(
      'id' => 'currency_amount',
      'currency_code' => 'EUR',
    ),
    'help' => t('Amount'),
    'title' => t('Amount'),
  );
  $data['currency_test']['amount_currency_code_field_definition'] = array(
    'field' => array(
      'id' => 'currency_amount',
      'currency_code' => 'UAH',
      'currency_code_field' => 'currency_code',
    ),
    'help' => t('Amount'),
    'title' => t('Amount'),
  );
  $data['currency_test']['amount_currency_code_field_table_definition'] = array(
    'field' => array(
      'id' => 'currency_amount',
      'currency_code' => 'UAH',
      'currency_code_field' => 'currency_code',
      'currency_code_table' => 'currency_test',
    ),
    'help' => t('Amount'),
    'title' => t('Amount'),
  );
  $data['currency_test']['amount_currency_undefined'] = array(
    'field' => array(
      'id' => 'currency_amount',
    ),
    'help' => t('Amount'),
    'title' => t('Amount'),
  );
  $data['currency_test']['currency_sign'] = array(
    'field' => array(
      'currency_property' => 'sign',
      'id' => 'currency',
    ),
    'help' => t('Currency Sign'),
    'title' => t('Currency sign'),
    'real field' => 'currency_code',
  );
  $data['currency_test']['currency_subunits'] = array(
    'field' => array(
      'currency_property' => 'subunits',
      'id' => 'currency',
    ),
    'help' => t('Number of subunits'),
    'title' => t('Number of subunits'),
    'real field' => 'currency_code',
  );

  return $data;
}

/**
 * Implements form build callback: show a currency_amount element.
 */
function currency_test_form_currency_amount(array $form, array &$form_state, $minimum_amount, $maximum_amount, $currency_code = FALSE) {
  $form['#submit'] = array('currency_test_form_submit');
  $form['amount'] = array(
    '#currency_code' => $currency_code,
    '#type' => 'currency_amount',
    '#title' => t('Foo amount'),
    '#minimum_amount' => $minimum_amount,
    '#maximum_amount' => $maximum_amount,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Implements form build callback: show a currency_locale element.
 */
function currency_test_form_currency_locale(array $form, array &$form_state) {
  $form['#submit'] = array('currency_test_form_submit');
  $form['locale'] = array(
    '#type' => 'currency_locale',
    '#title' => t('Foo locale'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Implements form build callback: show a currency_sign element.
 */
function currency_test_form_currency_sign(array $form, array &$form_state, $currency_code, $currency_sign) {
  $form['#submit'] = array('currency_test_form_submit');
  $form['sign'] = array(
    '#currency_code' => $currency_code ? $currency_code : FALSE,
    '#default_value' => $currency_sign,
    '#type' => 'currency_sign',
    '#title' => t('Foo sign'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Implements form submit callback for testing the submission of form elements.
 */
function currency_test_form_submit(array $form, array &$form_state) {
  // Display the form element value, so we can test if it is processed.
  foreach ($form_state['values'] as $name => $value) {
    drupal_set_message("\$form_state['$name'] = " . var_export($value, TRUE));
  }
}
