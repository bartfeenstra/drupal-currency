<?php

/**
 * @file
 * Contains class CurrencyAmountViewsHandlerFieldWebTestCase.
 */

/**
 * Tests CurrencyAmountViewsHandlerField.
 */
class CurrencyAmountViewsHandlerFieldWebTestCase extends ViewsSqlTest {

  /**
   * Implements DrupalTestCase::getInfo().
   */
  static function getInfo() {
    return array(
      'name' => 'CurrencyAmountViewsFieldHandler',
      'group' => 'Currency',
      'dependencies' => array('views'),
    );
  }

  /**
   * Overrides parent::setUp().
   */
  function setUp() {
    $this->profile = 'testing';
    parent::setUp();
    module_enable(array('currency', 'views'));
  }

  /**
   * Overrides parent::schemaDefinition.
   */
  protected function schemaDefinition() {
    $schema['views_test'] = array(
      'fields' => array(
        'currency_code' => array(
          'type' => 'varchar',
          'length' => '3',
        ),
      ),
    );
    $fields = array('amount_currency_code_option', 'amount_currency_code_field_option', 'amount_currency_code_definition', 'amount_currency_code_field_definition', 'amount_currency_undefined');
    foreach ($fields as $field) {
      $schema['views_test']['fields'][$field] = array(
        'type' => 'float',
        'size' => 'big',
      );
    }

    return $schema;
  }

  /**
   * Overrides parent::viewsData();
   */
  function viewsData() {
    // Declaration of the base table.
    $data['views_test']['table'] = array(
      'group' => t('Views test'),
      'base' => array(
        'field' => 'id',
        'title' => t('Views test'),
      ),
    );

    // Declaration of fields.
    $data['views_test']['currency_code'] = array(
      'title' => t('Currency code'),
      'help' => t('Currency code'),
      'field' => array(
        'handler' => 'views_handler_field',
      ),
      'sort' => array(
        'handler' => 'views_handler_sort',
      ),
    );
    $data['views_test']['amount_currency_code_option'] = array(
      'title' => t('Amount'),
      'help' => t('Amount'),
      'field' => array(
        'handler' => 'CurrencyAmountViewsHandlerField',
        'float' => TRUE,
      ),
    );
    $data['views_test']['amount_currency_code_field_option'] = array(
      'title' => t('Amount'),
      'help' => t('Amount'),
      'field' => array(
        'handler' => 'CurrencyAmountViewsHandlerField',
        'float' => TRUE,
      ),
    );
    $data['views_test']['amount_currency_code_definition'] = array(
      'title' => t('Amount'),
      'help' => t('Amount'),
      'field' => array(
        'handler' => 'CurrencyAmountViewsHandlerField',
        'float' => TRUE,
        'currency_code' => 'EUR',
      ),
    );
    $data['views_test']['amount_currency_code_field_definition'] = array(
      'title' => t('Amount'),
      'help' => t('Amount'),
      'field' => array(
        'handler' => 'CurrencyAmountViewsHandlerField',
        'float' => TRUE,
        'currency_code' => 'UAH',
        'currency_code_field' => 'views_test_currency_code',
      ),
    );
    $data['views_test']['amount_currency_undefined'] = array(
      'title' => t('Amount'),
      'help' => t('Amount'),
      'field' => array(
        'handler' => 'CurrencyAmountViewsHandlerField',
        'float' => TRUE,
      ),
    );

    return $data;
  }

  /**
   * Overrides parent::dataSet();
   */
  protected function dataSet() {
    $amounts = array(
      'amount_currency_code_option' => 123.456,
      'amount_currency_code_field_option' => 123.456,
      'amount_currency_code_definition' => 123.456,
      'amount_currency_code_field_definition' => 123.456,
      'amount_currency_undefined' => 123.456,
    );
    return array(
      array(
        'currency_code' => 'EUR',
      ) + $amounts,
      array(
        'currency_code' => 'USD',
      ) + $amounts,
      array(
        'currency_code' => '',
      ) + $amounts,
    );
  }

  /**
   * Overrides parent::getBasicView().
   */
  protected function getBasicView() {
    views_include('view');

    // Create the basic view.
    $view = new view();
    $view->name = 'test_view';
    $view->add_display('default');
    $view->base_table = 'views_test';

    // Set up the fields we need.
    $display = $view->new_display('default', 'Master', 'default');
    $display->override_option('fields', array(
      'currency_code' => array(
        'id' => 'currency_code',
        'table' => 'views_test',
        'field' => 'currency_code',
        'relationship' => 'none',
      ),
      'amount_currency_code_option' => array(
        'id' => 'amount_currency_code_option',
        'table' => 'views_test',
        'field' => 'amount_currency_code_option',
        'relationship' => 'none',
      ),
      'amount_currency_code_field_option' => array(
        'id' => 'amount_currency_code_field_option',
        'table' => 'views_test',
        'field' => 'amount_currency_code_field_option',
        'relationship' => 'none',
      ),
      'amount_currency_code_definition' => array(
        'id' => 'amount_currency_code_definition',
        'table' => 'views_test',
        'field' => 'amount_currency_code_definition',
        'relationship' => 'none',
      ),
      'amount_currency_code_field_definition' => array(
        'id' => 'amount_currency_code_field_definition',
        'table' => 'views_test',
        'field' => 'amount_currency_code_field_definition',
        'relationship' => 'none',
      ),
      'amount_currency_undefined' => array(
        'id' => 'amount_currency_undefined',
        'table' => 'views_test',
        'field' => 'amount_currency_undefined',
        'relationship' => 'none',
      ),
    ));

    return $view;
  }

  /**
   * Tests CurrencyAmountViewsHandlerField.
   */
  public function testCurrencyAmountViewsHandlerField() {
    $view = $this->getBasicView();
    $view->save();

    // Test view creation/editing.
    $account = $this->drupalCreateUser(array('administer views'));
    $this->drupalLogin($account);
    $this->drupalPost('admin/structure/views/nojs/config-item/test_view/default/field/amount_currency_code_option', array(
      'options[currency_code]' => 'EUR',
    ), t('Apply'));
    $this->drupalPost('admin/structure/views/nojs/config-item/test_view/default/field/amount_currency_code_field_option', array(
      'options[currency_code]' => 'UAH',
      'options[currency_code_field]' => 'views_test_currency_code',
    ), t('Apply'));
    $this->drupalPost('admin/structure/views/view/' . $view->name, array(), t('Save'));

    // Test view display.
    $view = views_get_view($view->name);
    $this->executeView($view);
    $values = array(
      array(
        'amount_currency_code_option' => '€123.456',
        'amount_currency_code_field_option' => '€123.456',
        'amount_currency_code_definition' => '€123.456',
        'amount_currency_code_field_definition' => '€123.456',
        'amount_currency_undefined' => '¤123.456',
      ),
      array(
        'amount_currency_code_option' => '€123.456',
        'amount_currency_code_field_option' => '$123.456',
        'amount_currency_code_definition' => '€123.456',
        'amount_currency_code_field_definition' => '$123.456',
        'amount_currency_undefined' => '¤123.456',
      ),
      array(
        'amount_currency_code_option' => '€123.456',
        'amount_currency_code_field_option' => '₴123.456',
        'amount_currency_code_definition' => '€123.456',
        'amount_currency_code_field_definition' => '₴123.456',
        'amount_currency_undefined' => '¤123.456',
      ),
    );
    foreach ($values as $row => $row_values) {
      foreach ($row_values as $field => $value) {
        $this->assertEqual($view->field[$field]->advanced_render($view->result[$row]), $value);
      }
    }
  }
}
