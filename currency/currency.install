<?php

/**
 * @file
 * Installation and uninstallation functionality.
 */

require_once __DIR__ . '/vendor/autoload.php';

/**
 * Implements hook_schema().
 */
function currency_schema() {
  $schema['currency'] = array(
    'description' => 'Currency information based on ISO 4127.',
    'export' => array(
      'key' => 'ISO4217Code',
      'key name' => 'ISO 4217 code',
      'primary key' => 'ISO4217Code',
      'default hook' => 'currency_info',
      'object' => 'Currency',
      'save callback' => 'currency_save',
      'delete callback' => 'currency_delete',
    ),
    'fields' => array(
      'export_module' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'export_type' => array(
        'type' => 'int',
        'length' => 'tiny',
        'not null' => TRUE,
      ),
      'ISO4217Code' => array(
        'type' => 'varchar',
        'length' => 3,
        'not null' => TRUE,
      ),
      'ISO4217Number' => array(
        'type' => 'varchar',
        'length' => 3,
      ),
      'rounding_step' => array(
        'type' => 'int',
      ),
      'sign' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'subunits' => array(
        'type' => 'int',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
    'primary key' => array('ISO4217Code'),
    'indexes' => array(
      'ISO4217Number' => array('ISO4217Number'),
    ),
  );
  // Set Ctools object defaults based on Currency's default values.
  // Manually include the class' file, because the registry may not have been
  // loaded yet.
  require_once __DIR__ . '/includes/Currency.inc';
  foreach (get_class_vars('Currency') as $property => $default_value) {
    if (isset($schema['currency']['fields'][$property])) {
      $schema['currency']['fields'][$property]['object default'] = $default_value;
    }
  }
  $schema['currency_locale_pattern'] = array(
    'description' => 'Locale-specific amount formatting.',
    'export' => array(
      'key' => 'locale',
      'key name' => 'Locale',
      'default hook' => 'currency_locale_pattern_info',
      'object' => 'CurrencyLocalePattern',
    ),
    'fields' => array(
      'export_module' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'export_type' => array(
        'type' => 'int',
        'length' => 'tiny',
      ),
      'locale' => array(
        'type' => 'varchar',
        'length' => 5,
      ),
      'pattern' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
    'primary key' => array('locale'),
  );
  // Set Ctools object defaults based on CurrencyLocalePattern's default
  // values.
  // Manually include the class' file, because the registry may not have been
  // loaded yet.
  require_once __DIR__ . '/includes/CurrencyLocalePattern.inc';
  foreach (get_class_vars('CurrencyLocalePattern') as $property => $default_value) {
    if (isset($schema['currency_locale_pattern']['fields'][$property])) {
      $schema['currency_locale_pattern']['fields'][$property]['object default'] = $default_value;
    }
  }

  return $schema;
}

/**
 * Implements hook_requirements().
 */
function currency_requirements($phase) {
  $loaded = extension_loaded('BCMath');
  $requirements['currency_extension_bcmath'] = array(
    'title' => t('PHP BCMath extension'),
    'value' => $loaded ? t('Loaded') : t('Not loaded'),
    'severity' => $loaded ? REQUIREMENT_OK : REQUIREMENT_ERROR,
  );

  return $requirements;
}

/**
 * Upgrades \Drupal\currency\Plugin\currency\exchanger\Delegator configuration.
 */
function currency_update_8300(array &$sandbox) {
  update_variables_to_config('currency.exchanger.delegator', array(
    'currency_exchanger' => 'exchangers',
  ));
}


/**
 * Upgrades \Drupal\currency\Plugin\currency\exchanger\FixedRates
 * configuration.
 */
function currency_update_8301(array &$sandbox) {
  $config = config('currency.exchanger.fixed_rates');
  $rates = $config->get('rates');
  $rates_data = db_select('currency_exchanger_fixed_rates', 'cefr')
    ->fields('cefr')
    ->execute();
  foreach ($rates_data as $rate_data) {
    $rates[$rate_data->currency_code_from][$rate_data->currency_code_to] = $rate_data->rate;
  }
  $config->set('rates', $rates);
  $config->save();
  db_drop_table('currency_exchanger_fixed_rates');
}
